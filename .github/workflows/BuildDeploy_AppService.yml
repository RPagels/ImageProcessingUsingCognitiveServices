name: BuildDeploy_AppService

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allow mannually trigger 
  workflow_dispatch: 
  
env:
  # DOCKERFILEPATH: "Application/AspNetWebApp.Web"
  
  dotnet_version: '7.x.x'
  Azure_Resource_GroupName: 'rg-ImageProcessing-rpagels'
  Azure_Resource_GroupLocation: 'eastus2'
  CONFIGURATION: Release
  WORKING_DIRECTORY: .
  AZURE_CREDENTIALS_MCAPS: ${{ secrets.AZURE_CREDENTIALS_MCAPS }}

jobs:

  ################################################################
  # Stage: Deploy Infrastructure
  ################################################################  
  deploy_infrastructure:
    runs-on: ubuntu-latest
    outputs:
      output_webSiteName: ${{ steps.Infra.outputs.out_webSiteName }}
      output_keyvaultName: ${{ steps.Infra.outputs.out_keyvaultName }}
      output_functionAppName: ${{ steps.Infra.outputs.out_functionAppName }}

    name: Deploy Infrastructure
    steps:
    - uses: actions/checkout@master

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS_MCAPS }}

    # Check if Resource Group Exists
    - name: Ensure Resource Group Exists
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          #!/bin/bash
          az group create --name ${{ env.Azure_Resource_GroupName }} --location ${{ env.Azure_Resource_GroupLocation }}

    # Unlock Resource Group
    - name: Ensure Resource Group is UnLocked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}

    - name: Checkout
      uses: actions/checkout@v3

      # Deploy ARM Template using Bicep DSL
    - name: Infrastructure Deploy
      id: Infra
      uses: azure/arm-deploy@v1
      continue-on-error: false
      with:
        resourceGroupName: ${{ env.Azure_Resource_GroupName }}
        template: ./IaC/main.bicep
        #parameters: ./IaC/main-1.params.json ContainerRevisionSuffix=${{ steps.vars.outputs.short_sha }}
        failOnStdErr: false

    # Lock Resource Group
    - name: Ensure Resource Group is Locked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'

    - name: DEBUG ONLY Display Output Variables
      run: |
         echo 'output_webSiteName: ${{ steps.Infra.outputs.out_webSiteName }}'
         echo 'output_keyvaultName: ${{ steps.Infra.outputs.out_keyvaultName }}'
         echo 'output_webSiteName: ${{ steps.Infra.outputs.out_webSiteName }}''
         echo 'output_functionAppName: ${{ steps.Infra.outputs.out_functionAppName }}''

  Build_Application:
    runs-on: ubuntu-latest
    name: 'Build Application'
    needs: [deploy_infrastructure]

    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      ###########################################
      # Build App
      ###########################################
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.dotnet_version }}

      # Generate Build Assembly Version based on Date/Time
      # - name: Generate Build Assembly Version
      #   uses: Azure/powershell@v1
      #   id: setBuildNumber
      #   env:
      #     POWERSHELL_TELEMETRY_OPTOUT: 1
      #   with:
      #     inlineScript: ./GenerateVersionNumber.ps1
      #     # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
      #     azPSVersion: '3.4.0'
      #     # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
      #     errorActionPreference: continue
          
      # Run dotnet build and publish
      - name: dotnet build unit test and publish
        run: |
          dotnet restore
          dotnet build $GITHUB_WORKSPACE/ImageProcessing.Web/ImageProcessing.Web.csproj --configuration ${{ env.buildConfiguration }} --no-restore
          dotnet publish $GITHUB_WORKSPACE/ImageProcessing.Web/ImageProcessing.Web.csproj --configuration ${{ env.buildConfiguration }} -o './web'
          dotnet build $GITHUB_WORKSPACE/ImageProcessing.FuncApp/ImageProcessing.FuncApp.csproj --configuration ${{ env.buildConfiguration }} --no-restore
          dotnet publish $GITHUB_WORKSPACE/ImageProcessing.FuncApp/ImageProcessing.FuncApp.csproj --configuration ${{ env.buildConfiguration }} -o './functionapp'

      ###########################################
      # Upload Artifacts
      ###########################################
      - name: Upload Build Artifacts-Website
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: ImageProcessing.Web
          path: ${{ github.workspace }}/web

      - name: Upload Build Artifacts-FunctionApp
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: ImageProcessing.FuncApp
          path: ${{ github.workspace }}/functionapp

  ################################################################
  # Stage: Deploy to Web App
  ################################################################              
  deploy_application_to_webapp:
    name: Deploy App to Web
    needs: [Build_Application, deploy_infrastructure]
    environment:
      name: 'Development-WebApps'
      url: 'https://${{ needs.deploy_infrastructure.outputs.output_webSiteName }}.azurewebsites.net/'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS_MCAPS }}

    - name: DEBUG ONLY Display Output Variables
      run: |
         echo 'output_webSiteName: ${{ needs.deploy_infrastructure.outputs.output_webSiteName }}'
         echo 'output_keyvaultName: ${{ needs.deploy_infrastructure.outputs.output_keyvaultName }}'
         echo 'output_containerName: ${{ needs.deploy_infrastructure.outputs.output_containerName }}'
         echo 'output_containerAppEnvName: ${{ needs.deploy_infrastructure.outputs.output_containerAppEnvName }}'

    # Unlock Resource Group
    - name: Ensure Resource Group is UnLocked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}

    # Deploy container to Web App
    # - name: 'Deploy Container to Web App'
    #   uses: azure/webapps-deploy@v2
    #   with: 
    #     app-name: ${{ needs.deploy_infrastructure.outputs.output_webSiteName }}
    #     images: ${{ needs.deploy_infrastructure.outputs.output_containerregistryName }}.azurecr.io/${{ needs.deploy_infrastructure.outputs.output_containerName }}:${{ github.run_number }}

    - name: Download Build Artifacts-Website Application
      uses: actions/download-artifact@v4.1.7
      continue-on-error: false
      with:
        name: ImageProcessing.Web
        path: ${{ github.workspace }}/ImageProcessing.Web

    - name: 'Deploy Website Application'
      uses: azure/webapps-deploy@v2
      with:
          app-name: ${{ needs.deploy_infrastructure.outputs.output_webSiteName }}
          package: './ImageProcessing.Website'

    # ToDo!  Use Azure CLI to Create an Event Grid Endpoint
    # https://learn.microsoft.com/en-us/cli/azure/eventgrid/event-subscription?view=azure-cli-latest#az-eventgrid-event-subscription-create
    #
    # endpointUrl: 'https://${webhookEndpoint}.azurewebsites.net/api/updates'

    - name: Download Build Artifacts-Function Application
      uses: actions/download-artifact@v4.1.7
      continue-on-error: false
      with:
        name: ImageProcessing.FuncApp
        path: ${{ github.workspace }}/ImageProcessing.FuncApp

    # Deploy Function Application
    - name: 'Deploy Function Application'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ needs.deploy_infrastructure.outputs.output_functionAppName }}
        slot-name: 'production'
        package: './ImageProcessing.FuncApp'

    # Lock Resource Group
    - name: Ensure Resource Group is Locked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'

    # Logout of Azure and Clear the Cache
    - name: Logout of Azure and Clear the Cache
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az logout
          az cache purge
          az account clear

